/*
 * Web App
 *
 * This build file was Copied from https://spring.io/guides/gs/serving-web-content/.
 *
 	Task for building the war: 'build'
 */

 	
	//  http://ajoberstar.org/grgit/grgit-gradle.html
	// Grgit: Generally, you should only apply the plugin to the root project of your build.
	//  Plugin adds grgit property to your build, which is an instance of Grgit.
	//     Plugin looks for .git directory in build directory and it's parents
 
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.ajoberstar.grgit:grgit-gradle:3.1.1"
  }
}

plugins {
	id 'java'
	id 'war'
	id 'eclipse'
//	id "org.springframework.boot" version "2.0.1.RELEASE"
//	id "io.spring.dependency-management" version "1.0.5.RELEASE"
	//  moved to 'buildscript'. See Notes above	id 'org.ajoberstar.grgit' version '3.1.1'
}

apply plugin: "org.ajoberstar.grgit"

repositories {
	jcenter()
    mavenCentral()
}

//  Default Task
//    Comment out since creates infinite loop of building
//  defaultTasks 'build'

sourceCompatibility = 1.8     //  defaults to currently installed JVM
// targetCompatibility = 1.8  //  defaults to sourceCompatibility

configurations.all {
//  Need all these excludes if using Spring Boot
	//  Exclude default logger for Spring Boot 'logback'
   exclude group:"ch.qos.logback", module:"logback-core"
   exclude group:"ch.qos.logback", module:"logback-classic"
   	//  Exclude Routing of log4j to slf4j since using opposite (slf4j to log4j) and including this would create a circular reference
   exclude group:'org.apache.logging.log4j', module: 'log4j-to-slf4j'
//   exclude group:'org.apache.logging.log4j', module: 'log4j-api'

	//   NO longer exclude since switched to DBCP 2
	//  Exclude following since OLD
	//  Included by DBCP 1
	// https://mvnrepository.com/artifact/xerces/xerces
	//   compile group: 'xerces', name: 'xerces', version: '2.0.2'
	//  exclude group: 'xerces', module: 'xerces'
}

dependencies {

	//  Specify dependency on Proxl Shared Code
	
	compile project(":proxl-shared-code") //  !! See Dependencies of proxl-shared-code
	
	/////////////////////////////////////
	
	
	//  Jersey Server for webservices
	
	//        latest version requires Java > 8
	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
	// compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.28'
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.27'
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.containers/jersey-container-servlet-core
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.27'
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
	compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.27'
	
	
	// https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.27'
	
	//  Java Advanced Imaging
	
	//   Since not find 'jai_imageio' in Maven Central or JCentral, use all JAI jars from local directory
	
	// https://mvnrepository.com/artifact/javax.media/jai_core
	// compile group: 'javax.media', name: 'jai_core', version: '1.1.3'
	
	// https://mvnrepository.com/artifact/javax.media/jai_codec
	// compile group: 'javax.media', name: 'jai_codec', version: '1.1.3'
	
	//  Not found:   error msg: Could not find javax.media:jai_imageio:1.1.1.
	// https://mvnrepository.com/artifact/javax.media/jai_imageio
	// compile group: 'javax.media', name: 'jai_imageio', version: '1.1.1'
	
	//  Not found:   error msg: Could not find javax.media:jai_imageio:1.1.
	// https://mvnrepository.com/artifact/javax.media/jai_imageio
	// compile group: 'javax.media', name: 'jai_imageio', version: '1.1'
	
	
	//  Mail
	
	// https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.4.1'
	
	//  Later versions like this have license CDDL and GPL
	// https://mvnrepository.com/artifact/javax.mail/javax.mail-api
//	compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.1'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
	compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.2.0'
	
	
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
//	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.45'
	
	//  Logging Log4j Version 2
	
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.16.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.16.0'
	compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.16.0' //  Needed for Web app
	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.16.0'
	
	//  Jakarta Commons Logging to SLF4J
	compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'
	
	//  Log4j 1 to 2 bridge
	compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.2'
		
	
	//  redirects log4j to slf4j, the opposite of how logging is set up
	// https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j
//	compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'

	
	// Used by included yeastrc jar password management
	// https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto
	compile group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.1.5.RELEASE'
	
	// https://mvnrepository.com/artifact/javax.servlet/jstl
	compile group: 'javax.servlet', name: 'jstl', version: '1.2'
	
	
	//   Apache Commons
	
	//  Old StringUtils
	// https://mvnrepository.com/artifact/commons-lang/commons-lang
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	
	//  New StringUtils
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	// https://mvnrepository.com/artifact/org.apache.commons/commons-math3
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
	
	
	//   Apache HTPP Client

	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.8' // Was using 4.1.2

	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
	compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.11' // Was using 4.1.2
 	
	
	// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'
	
	// https://mvnrepository.com/artifact/joda-time/joda-time
	compile group: 'joda-time', name: 'joda-time', version: '2.10.2'
	
	//  Jackson JSON parsing
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.9'
	
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
	
	//  BioJava
	
		//  version 5 exists for all jars:  https://mvnrepository.com/artifact/org.biojava/
		
	// https://mvnrepository.com/artifact/org.biojava/biojava-core
	compile group: 'org.biojava', name: 'biojava-core', version: '4.2.12'
	
	// https://mvnrepository.com/artifact/org.biojava/biojava-structure
	compile group: 'org.biojava', name: 'biojava-structure', version: '4.2.12'
	
	// https://mvnrepository.com/artifact/org.biojava/biojava-alignment
	compile group: 'org.biojava', name: 'biojava-alignment', version: '4.2.12'
	
	
	//  Struts 1.2.9
	
	// https://mvnrepository.com/artifact/struts/struts
	compile group: 'struts', name: 'struts', version: '1.2.9'
		
	// https://mvnrepository.com/artifact/struts/struts-el
	compile group: 'struts', name: 'struts-el', version: '1.2.9'
		
		
	
	// JAXB dependencies (Required for Java 11+)
	// https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
	implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.2'
	// https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
	implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'
	
	
	
		///////////
		
	//  Other Proxl Jars
		
	//  Jars built from other Proxl Github repositories
	compile fileTree(dir: '../libs_proxl_github_jars', include: ['*.jar'])
	
	//  Other Yeastrc Jars
	
	//  Jars built from other Yeastrc Github repositories - Webapp only	
	compile fileTree(dir: 'libs_webapp__yeastrc_github_jars', include: ['*.jar'])
	
	
	//  Other Jars - Webapp only	
	
	compile fileTree(dir: 'libs_webapp__other', include: ['*.jar'])
	
	
	
    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    providedCompile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '8.5.29'

	//  
	// https://mvnrepository.com/artifact/javax.servlet/servlet-api
	//  Most current servlet spec:
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	
	// https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api
	providedCompile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: '2.3.3'
	
}

/*
	Before the Gradle WAR processing creates the war, it runs task ':front_end:frontEndBuild'
	to build the front end.
*/
processResources.dependsOn 'front_end:frontEndBuild'





/*
 * Before the Gradle WAR processing creates the war, it deletes the output .war file to ensure it is always re-created 
 */
processResources.dependsOn 'deleteExistingBuiltWar'


/*
 * Before the Gradle WAR processing creates the war, it deletes the output .war file to ensure it is always re-created 
 */

task deleteExistingBuiltWar(type: GradleBuild) {
  	
  	println("Webapp Gradle build deleteExistingBuiltWar called - Before WAR created. Deletes the output .war file to ensure it is always re-created")
  	
	  	
	//  from file settings.gradle
	
	//  Generated war name
	//  rootProject.name = 'proxl' // value may be different, see file settings.gradle
	  	
  	println("project.name: ${project.name}")
  	println("rootProject.name: ${rootProject.name}")
  	
  	String warFilename = "${rootProject.name}.war"
  	
  	String warFileInBuildLibs = "build/libs/" + warFilename
  	
  	println("Deleting the output .war file " + warFileInBuildLibs )
  	  
	delete warFileInBuildLibs
}


/*
 * Before the Gradle WAR processing creates the war, create file under WEB-INF with GIT Hash 
 */
processResources.dependsOn 'createFileGitHash'

/*
 * Before the Gradle WAR processing creates the war, it deletes the output .war file to ensure it is always re-created 
 */

task createFileGitHash(type: GradleBuild) {
  	doLast {
	  	println("Webapp Gradle build createFileGitHash doLast called - Before WAR created. Create file under WEB-INF with GIT Hash ")
				  	
		//  Assign to grgit, created by plugin
		def gitRepo = grgit
		
		
		// def gitRepo = Grgit.open({
		//  dir = ".."  //  Use parent directory since that is root of GIT repo
		//  currentDir = <path>
		//  credentials = <credentals>
		// })

		def gitHeadId = gitRepo.head().id
		def gitCommit = gitRepo.head().getAbbreviatedId(8)
		def gitBranch = gitRepo.branch.getCurrent().getName()
		
		//  Get tag at GIT HEAD: like git tag --points-at HEAD
		def repoHead = gitRepo.head()
		def repoHeadTag = gitRepo.tag.list().find {
			it.commit == repoHead
		}
		def repoTagName = "NO GIT Tag at HEAD"
		
		if ( repoHeadTag ) {
			println("GIT Tag at HEAD found")
			repoTagName = repoHeadTag.getName()
		}
		
		
		println("gitHeadId: " + gitHeadId )
		println("gitCommit: " + gitCommit )
		println("gitBranch: " + gitBranch )
		println("GIT Tag at HEAD: " + repoTagName )
		
		new File("$projectDir/src/main/resources/proxl_version_from_build.properties").text = """

#  Generated by the build

Project-Title=${project.name}
Branch=$gitBranch
GIT-HASH=${gitCommit}
GIT-Full-HASH=${gitHeadId}
GIT-Repo-Tag-Name=${repoTagName}
Buildtime=${new Date().format("yyyy-MM-dd HH:mm:ssZ")}
		"""
	}
}
